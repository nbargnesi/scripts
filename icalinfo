#!/usr/bin/env python
'''
Copyright (c) 2011-2014 Nick Bargnesi

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

@author: Nick Bargnesi
'''

import sys

def usage():
    print 'Usage:', me, '[FILE]'
    print "Try '" + me, " --help' for more information."
    
def help():
    print 'Usage:', me, '[FILE]'
    print 'Prints calendar information from a FILE.'
    print 'Example:', me, 'meeting.ics'
    print
    print 'Miscellaneous:'
    print '  -h, --help\t\tdisplay this help and exit'
    print
    print 'icalinfo home page: <http://nick.den-4.com>'
    
def exit_success():
    sys.exit(0)
    
def exit_failure():
    sys.exit(1)
    
try:
    from colorama import Fore, Back, init
except ImportError:
    print "You're missing colorama."
    print "Get it here: http://pypi.python.org/pypi/colorama"
    exit_failure()

def parse(line):
    if line.startswith('DTSTART;'):
        parse_dtstart(line)
    elif line.startswith('SUMMARY:'):
        parse_summary(line)
    elif line.startswith('LOCATION:'):
        parse_location(line)

def parse_dtstart(line):
    print Fore.YELLOW + '[WHEN]' + Fore.RESET + Back.RESET
    datetime = line.split(':')[1].split('\n')[0].split('T')
    date = datetime[0]
    
    # drop seconds on time
    time = datetime[1][:-2]
    
    # print date
    print Fore.RED + '\tDate' + Fore.YELLOW + ':' + Fore.RESET,
    print Fore.BLUE + date + Fore.RESET
    
    # print time
    print Fore.RED + '\tTime' + Fore.YELLOW + ':' + Fore.RESET,
    print Fore.MAGENTA + time + Fore.RESET 
    print
    
def parse_location(line):
    print Fore.YELLOW + '[WHERE]' + Fore.RESET + Back.RESET
    location = line.strip('LOCATION:').split('\n')[0]
    print Fore.RED + '\tLocation' + Fore.YELLOW + ':' + Fore.RESET,
    print Fore.GREEN + location + Fore.RESET
    print

def parse_summary(line):
    print Fore.YELLOW + '[WHAT]' + Fore.RESET + Back.RESET
    summary = line.strip('SUMMARY:').split('\n')[0]
    print Fore.RED + '\tSummary' + Fore.YELLOW + ':' + Fore.RESET,
    print Fore.CYAN + summary + Fore.RESET
    print

if __name__ == '__main__':
    me = sys.argv[0]
    
    if len(sys.argv) != 2:
        me = sys.argv[0]
        usage()
        exit_failure()
        
    arg = sys.argv[1]
    if arg == '--help' or arg == '-h':
        help()
        exit_failure()        
    try:
        file = open(arg, 'r')
    except IOError:
        print me + ':', arg + ':', 'No such file'
        exit_failure()
    
    init()

    inVEvent = False
    for line in file.readlines():
        if line.startswith('BEGIN:VEVENT'):
            inVEvent = True
        elif line.startswith('END:VEVENT'):
            inVEvent = False
        
        if inVEvent:
            parse(line)

