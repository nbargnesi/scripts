#!/usr/bin/env python3
'''
Copyright (c) 2011-2014 Nick Bargnesi <nick@den-4.com>

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

@author: Nick Bargnesi
'''

import sys

def usage():
    '''
    Prints usage information to stdout.
    '''
    print('Usage:', ME, '<DIR>...')
    print("Try '" + ME, " --help' for more information.")
    
def help():
    '''
    Prints usage and help information to stdout.
    '''
    print('Usage:', ME, '<DIR>...')
    print('Waits until a file is written in any of the directories provided')
    print('as arguments. This program will exit with a return code of 0 unless')
    print('it is interrupted.')
    print()
    print('If no directories are provided, all directories under the current')
    print('working directory will be used.')
    print()
    print('Example:', ME, '$HOME')
    print()
    print('Miscellaneous:')
    print('  -h, --help\t\tdisplay this help and exit')
    print()
    print('gate home page: <http://nick.den-4.com>')
    
def exit_success(event):
    '''
    Exits with status 0.
    '''
    print(event.pathname)
    NOTIFIER.stop()
    sys.exit(0)
    
def exit_failure():
    '''
    Exits with status 1.
    '''
    sys.exit(1)
    
from os.path import isdir
from os import getcwd
try:
    from pyinotify import ProcessEvent, WatchManager, Notifier
    from pyinotify import IN_MODIFY
except ImportError as strerror:
    print("You're missing pyinotify (%s)." % strerror)
    print("Get it here: http://pyinotify.sourceforge.net")
    exit_failure()

class DummyProcessor(ProcessEvent):
    '''
    Handles filesystem events.
    '''
    def __init__(self):
        ProcessEvent.__init__(self)

    def process_IN_MODIFY(self, event):
        '''
        Handles IN_MODIFY(self, event):
        '''
        exit_success(event)

if __name__ == '__main__':
    ME = sys.argv[0]
    
    for arg in sys.argv[1:]:
        if arg == '--help' or arg == '-h':
            help()
            exit_failure()        

    DIRS = list()
    if len(sys.argv) > 1:
        DIRS = sys.argv[1:]
        SUCCESS = True
        for d in DIRS:
            if not isdir(d):
                print('%s: not a directory' % d)
                SUCCESS = False
        if not SUCCESS:
            exit_failure()
         
    WM = WatchManager()
    NOTIFIER = Notifier(WM, DummyProcessor())
    WDDS = list()
    if not DIRS:
        DIRS.append(getcwd())
    for d in DIRS:
        WDDS += WM.add_watch(d, IN_MODIFY)

    while True:
        try:
            NOTIFIER.process_events()
            if NOTIFIER.check_events():
                NOTIFIER.read_events()
        except KeyboardInterrupt:
            NOTIFIER.stop()
            exit_failure()
    exit_failure()

